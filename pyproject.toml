[project]
name = "seg4live2d"
version = "0.1.0"
description = "YOLOセグメンテーション技術を活用したLive2D用素材自動分割システム"
authors = [
    {name = "Seg4Live2D Team", email = "dev@seg4live2d.example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9,<3.13"
keywords = ["yolo", "live2d", "segmentation", "image-processing", "machine-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "ultralytics>=8.3.0", # YOLOv11 support
    # Image processing
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    "scikit-image>=0.21.0",
    "numpy>=1.24.0",
    # Web UI
    "streamlit>=1.28.0",
    "gradio>=4.0.0",
    # API (optional)
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.0.0",
    # File handling
    "pyyaml>=6.0.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    # Utilities
    "tqdm>=4.66.0",
    "rich>=13.0.0",
    "click>=8.1.0",
    "torch>=2.7.1",
    "torchvision>=0.22.1",
]

[project.optional-dependencies]
dev = [
    # Code quality
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.6.0",
    "isort>=5.12.0",
    
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    
    # Security
    "bandit>=1.7.5",
    "safety>=2.3.0",
    
    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.23.0",
    
    # Development tools
    "pre-commit>=3.5.0",
    "jupyterlab>=4.0.0",
    "ipywidgets>=8.1.0",
]

training = [
    # Extended ML libraries
    "wandb>=0.15.0",
    "tensorboard>=2.14.0",
    "albumentations>=1.3.0",
    "scikit-learn>=1.3.0",
    
    # Data handling
    "pandas>=2.1.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    
    # Advanced image processing
    "kornia>=0.7.0",
    "imgaug>=0.4.0",
]

api = [
    # API additional dependencies
    "redis>=5.0.0",
    "celery>=5.3.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    
    # Authentication
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    
    # Monitoring
    "prometheus-client>=0.17.0",
    "sentry-sdk>=1.35.0",
]

deployment = [
    # Production dependencies
    "gunicorn>=21.2.0",
    "supervisor>=4.2.5",
    
    # Cloud integrations
    "boto3>=1.29.0",
    "google-cloud-storage>=2.10.0",
    "azure-storage-blob>=12.18.0",
]

[project.urls]
Homepage = "https://github.com/username/seg4live2d"
Documentation = "https://seg4live2d.readthedocs.io"
Repository = "https://github.com/username/seg4live2d.git"
Issues = "https://github.com/username/seg4live2d/issues"
Changelog = "https://github.com/username/seg4live2d/blob/main/CHANGELOG.md"

[project.scripts]
seg4live2d = "src.cli.main:main"
seg4live2d-train = "src.training.train:main"
seg4live2d-server = "src.ui.streamlit_app:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
dev-dependencies = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.6.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pre-commit>=3.5.0",
]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "ARG002", # unused method argument
]
unfixable = ["B"]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["ARG", "S101"]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py39', 'py310', 'py311', 'py312']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "ultralytics.*",
    "streamlit.*",
    "gradio.*",
    "PIL.*",
    "skimage.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
    "api: marks tests for API functionality",
    "ui: marks tests for UI functionality",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = [
    "torch",
    "torchvision", 
    "ultralytics",
    "cv2",
    "PIL",
    "numpy",
    "streamlit",
    "fastapi",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]
